{% extends 'base.html.twig' %}
{% import 'order/samples.html.twig' as samples %}
{% if order.type != 'saliva' %}
    {% form_theme finalizeForm 'form/simple_checkbox.html.twig' %}
{% endif %}
{% block title %}Finalize - Order {{ order.orderId }} - {% endblock %}
{% block body %}
    {% include 'order/header.html.twig' with { active: 'finalize' } %}
    {{ form_start(finalizeForm, { attr: { class: 'warn-unsaved disable-enter prevent-resubmit finalize-form' } }) }}
    {{ form_errors(finalizeForm) }}

    <div class="form-group{% if not finalizeForm.finalizedTs.vars.valid %} has-error{% endif %}">
        {{ form_label(finalizeForm.finalizedTs) }}
        <span class="toggle-help-image" data-caption="Finalized time help text placeholder.">
                    <i class="fa fa-question-circle" aria-hidden="true"></i><span class="sr-only">Help</span>
                </span>
        {{ form_widget(finalizeForm.finalizedTs) }}
        {{ form_errors(finalizeForm.finalizedTs) }}
    </div>

    <div class="form-group{% if not finalizeForm.finalizedSamples.vars.valid %} has-error{% endif %}">
        {{ form_label(finalizeForm.finalizedSamples) }}
        <span class="toggle-help-image" data-caption="Finalized samples help text placeholder.">
                <i class="fa fa-question-circle" aria-hidden="true"></i><span class="sr-only">Help</span>
            </span>
        {% if order.type == 'saliva' %}
            {{ form_widget(finalizeForm.finalizedSamples) }}
        {% else %}
            {{ samples.form_widget(finalizeForm.finalizedSamples, order.disabled ? false : true, samplesInfo, version) }}
        {% endif %}
        {{ form_errors(finalizeForm.finalizedSamples) }}
    </div>

    {% if finalizeForm.fedexTracking is defined %}
        <ul class="nav nav-tabs">
            <li role="presentation" class="active"><a href="#" id="enable-number">
                    <i class="fa fa-keyboard-o" aria-hidden="true"></i>
                    Enter tracking number
                </a></li>
            <li role="presentation"><a href="#" id="enable-barcode">
                    <i class="fa fa-barcode" aria-hidden="true"></i>
                    Scan barcode
                </a></li>
        </ul>
        <br />
        <div class="row">
            <div class="col-xs-6" id="fedex-barcode" style="display:none">
                <div class="form-group">
                    <label class="control-label" for="fedex_barcode_first">FedEx or UPS barcode</label>
                    <input type="text" id="fedex_barcode_first" class="form-control">
                </div>
                <div class="form-group">
                    <label class="control-label" for="fedex_barcode_second">Verify barcode</label>
                    <input type="text" id="fedex_barcode_second" class="form-control">
                </div>
            </div>
            <div class="col-xs-12" id="fedex-number">
                {{ form_row(finalizeForm.fedexTracking) }}
            </div>
        </div>
        <hr />
    {% endif %}

    <div class="form-group{% if not finalizeForm.finalizedNotes.vars.valid %} has-error{% endif %}">
        {{ form_label(finalizeForm.finalizedNotes) }}
        <span class="toggle-help-image" data-caption="Finalized notes help text placeholder.">
                    <i class="fa fa-question-circle" aria-hidden="true"></i><span class="sr-only">Help</span>
                </span>
        {{ form_widget(finalizeForm.finalizedNotes) }}
        <small class="text-warning">Comments entered in this field must be transmitted to the Biobank via reconciliation reporting. You may not enter any participant identifying information here.</small>
        {{ form_errors(finalizeForm.finalizedNotes) }}
    </div>
    {{ form_rest(finalizeForm) }}
    {% if not order.disabled %}
        <p>
            <button type="submit" {% if hasErrors %} class="btn btn-default" disabled="disabled" {% else %} class="btn btn-primary" {% endif %}>
                Save and mark as finalized
            </button>
        </p>
    {% endif %}
    {{ form_end(finalizeForm) }}
    {% if order.status == 'unlock' %}
        {{ form_start(revertForm, { 'action': path('orderRevert', { participantId: participant.id, orderId: order.id }), 'method': 'POST', attr: { class: 'revert-form disable-enter prevent-resubmit' }}) }}
        {{ form_errors(revertForm) }}
        {{ form_end(revertForm) }}
    {% endif %}
{% endblock %}

{% block pagejs %}
    {{ encore_entry_script_tags('order-sub') }}
    <script>
        $(document).ready(function () {
            var name = 'input[name="order[finalizedSamples][]"]';
            {% if order.type == 'saliva' %}
            $('input.sample-disabled').closest('label').addClass('text-warning');
            var html;
            var collected = $(name).attr('collected');
            var processed = $(name).attr('processed');
            var error = $(name).attr('error');
            if (typeof collected !== 'undefined') {
                html = '<label><b>Collected:</b></label> <i class="fa fa-check text-success" aria-hidden="true"></i> '+collected+'</span>';
            } else {
                html = '<label><b>Collected:</b></label> <span class="label-normal text-danger">Not collected</span></span>';
            }
            if (typeof processed !== 'undefined') {
                if (typeof error !== 'undefined') {
                    html += '<label><b>Processed:</b></label> <span class="text-danger"><i class="fa fa-exclamation-circle" aria-hidden="true" data-toggle="tooltip" data-placement="bottom" title="'+error+'"></i> '+processed+'</span>';
                } else {
                    html += '<label><b>Processed:</b></label> <i class="fa fa-check text-success" aria-hidden="true"></i> '+processed+'</span>';
                }
            } else {
                html += '<label><b>Processed:</b></label> <span class="label-normal text-danger">Not processed</span></span>';
            }
            $(name).closest('div.checkbox').append('<span class="saliva-info">'+html+'</span>');
            {% else %}
            $('.sample-disabled label').addClass('text-warning');
            $('.header-collected').append('<br><small>'+{{ order.collectedTs.format('n/j/Y g:ia')|json_encode|raw }}+'</small>');
            $('.samples').each(function(e) {
                var html;
                var collected = $(this).find(name).attr('collected');
                var processed = $(this).find(name).attr('processed');
                var requiredProcessing = $(this).find(name).attr('required-processing');
                var warning = $(this).find(name).attr('warning');
                var error = $(this).find(name).attr('error');
                if (typeof collected !== 'undefined') {
                    html = '<td align="center"><i class="fa fa-check text-success" aria-hidden="true"></i></td>';
                } else {
                    html = '<td align="center"><label class="label-normal text-warning">Not collected</label></td>';
                }
                if (typeof processed !== 'undefined') {
                    if (typeof error !== 'undefined') {
                        html += '<td><span class="text-danger"><i class="fa fa-exclamation-circle" aria-hidden="true" data-toggle="tooltip" data-placement="bottom" title="'+error+'"></i> '+processed+'</span></td>';
                    } else if (typeof warning !== 'undefined') {
                        html += '<td><span class="text-warning"><i class="fa fa-exclamation-triangle" aria-hidden="true" data-toggle="tooltip" data-placement="bottom" title="'+warning+'"></i> '+processed+'</span></td>';
                    }else {
                        html += '<td><i class="fa fa-check text-success" aria-hidden="true"></i> '+processed+'</td>';
                    }
                } else {
                    if (typeof requiredProcessing !== 'undefined') {
                        html += '<td><label class="label-normal text-warning">Not processed</label></td>';
                    }
                }
                $(this).find('td:last').after(html);
            });
            {% endif %}

            $('[data-toggle="tooltip"]').tooltip();

            $('#checkall').on('change', function() {
                $('#order_finalizedSamples input:checkbox:enabled').prop('checked', $(this).prop('checked'));
                showHideConfirmEmptyOrderCheck();
            });
            $('#order_finalizedTs').pmiDateTimePicker();
            var orderView = new PMI.views['OrderSubPage']({
                el: $("body")
            });

            $('#enable-number').on('click', function() {
                $('#enable-number').parent().addClass('active');
                $('#enable-barcode').parent().removeClass('active');
                $('#fedex-barcode').hide();
                $('#fedex-number').removeClass('col-xs-6').addClass('col-xs-12');
                $('#fedex-number input').attr('readonly', false);
                return false;
            });
            $('#enable-barcode').on('click', function() {
                $('#enable-barcode').parent().addClass('active');
                $('#enable-number').parent().removeClass('active');
                $('#fedex-barcode').show();
                $('#fedex-number').removeClass('col-xs-12').addClass('col-xs-6');
                $('#fedex-number input').attr('readonly', true);
                return false;
            });

            $('#fedex_barcode_first, #fedex_barcode_second').on('change keyup', function() {
                var target;
                if ($(this).attr('id') === 'fedex_barcode_second') {
                    target = $('#form_fedex_tracking_second');
                } else {
                    target = $('#form_fedex_tracking_first');
                }
                target.attr('placeholder', '');
                target.parent().removeClass('has-error').removeClass('has-success');
                var barcode = $(this).val().trim();
                if (barcode.match(/^[a-zA-Z0-9]{18}$/)) { // 18 digit alphanumeric barcode for UPS
                    target.val(barcode);
                    target.parent().addClass('has-success');
                }
                else if (barcode.match(/^[0-9]{34}$/)) { // 34 digit barcode for FedEx
                    var fedexTracking = barcode.substring(20);
                    fedexTracking = fedexTracking.replace(/^0{1,2}/, ''); // trim up to two leading 0's
                    target.val(fedexTracking);
                    target.parent().addClass('has-success');
                } else {
                    target.val('');
                    if (barcode) {
                        target.attr('placeholder', 'Invalid barcode');
                        target.parent().addClass('has-error');
                    }
                }
            });

            $('.finalize-form button[type="submit"]').on('click', function () {
                //Display warning message
                var message = 'Are you sure you want to finalize this order?';
                $('input[name="form[finalized_samples][]"]').each(function () {
                    //Select samples that are unchecked and not disabled
                    if ($(this).prop('checked') === false && $(this).prop('disabled') === false) {
                        message = 'Warning: At least one sample that was collected and processed (as applicable) was not finalized. Are you sure you wish to continue?';
                        return false;
                    }
                });
                return confirm(message);
            });
        });
    </script>
{% endblock %}
