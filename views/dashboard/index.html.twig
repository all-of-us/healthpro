{% extends 'dashboard/base.html.twig' %}
{% block body %}
    <h2><i class="fa fa-tachometer" aria-hidden="true"></i> Dashboard</h2>
    <br />
    <ul class="nav nav-tabs top-pad" role="tablist">
        <li role="presentation"><a href="#total-progress" role="tab" data-toggle="tab" id="total-progress-nav"><span class="fa fa-users"></span> Total Progress to Date</a></li>
    </ul>
    <div id="plotly-tabs" class="tab-content">
        <div id="total-progress" class="tab-pane pad active fade in">
            <div class="row">
                <div id="total-progress-filters" class="col-md-3">
                    <div class="well well-sm">
                        <div class="form-group form-group-sm">
                            <label>Display Metric</label>
                            <select id="total-progress-metric-attribute" class="form-control total-progress-control">
                                <option value="PARTICIPANT_TOTAL">Total Participants</option>
                                <option value="PARTICIPANT_MEMBERSHIP_TIER">Participant Membership Tiers</option>
                            </select>
                        </div>
                        <div class="form-group form-group-sm">
                            <label>Show Column Totals <input type="checkbox" id="total-progress-show-annot" class="total-progress-control"></label>
                        </div>

                    </div>
                </div>
                <div id="plotly-total-progress" class="col-md-9 plotly-div"></div>
            </div>
            <script type="text/javascript">
                // function to grab current filter values and load JSON from load_map_data REST endpoint
                // success handler calls Plotly.newplot()
                function renderTotalProgressPlot() {
                    launchSpinner('plotly-total-progress');
                    // gather params
                    var metricAttr = $('#total-progress-metric-attribute').val();
                    var metricTitle = $('#total-progress-metric-attribute option:selected').text();
                    var showAnnot = $('#total-progress-show-annot').is(':checked');
                    var tpWidth = $('#plotly-total-progress').width() - 30;
                    var today = new Date().toISOString().split('T')[0];

                    // load data from metrics API
                    $.getJSON('/dashboard/metrics_load?metrics_attribute=' + metricAttr, function(data) {
                        var progressAnnot = [];
                        var tpLayout = {
                            title: 'Count of ' + metricTitle + ' as of ' + today,
                            font: PLOTLY_LABEL_FONT,
                            barmode: 'stack',
                            width: tpWidth,
                            height: tpWidth / 1.66,
                            annotations: progressAnnot
                        };

                        // build arrays of names/values and assemble for Plotly
                        var plotlyData = [];
                        $.each(data, function(index, row) {
                            var trace = {
                                x: [metricTitle],
                                y: [row['value']],
                                type: 'bar',
                                name: row['name'],
                                marker: {
                                    color: COLORBREWER_SET[index]
                                }
                            };
                            plotlyData.push(trace);
                        });

                        // load column totals if requested
                        if (showAnnot) {
                            loadBarChartAnnotations(plotlyData, progressAnnot);
                        }

                        // render plot and stop spinner
                        Plotly.newPlot('plotly-total-progress', plotlyData, tpLayout, PLOTLY_OPTS);
                        stopSpinner('plotly-total-progress');
                    });
                }

                renderTotalProgressPlot();

                // load plot on tab show (to save loading time)
                $('#total-progress-nav').on('shown.bs.tab', function (e) {
                    console.log('Showing total progress charts');
                    renderTotalProgressPlot();
                });

                // re-render on filter change
                $('.total-progress-control').change(function() {
                    renderTotalProgressPlot();
                });

                // re-render on window resizeEnd if tab is visible
                $( window ).on('resizeEnd', function() {
                    if ($('#total-progress').is(':visible')) {
                        renderTotalProgressPlot();
                    }
                });
            </script>
        </div>
    </div>
{% endblock %}
