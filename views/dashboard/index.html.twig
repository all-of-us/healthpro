{% extends 'dashboard/base.html.twig' %}
{% block body %}
    <h2><i class="fa fa-tachometer" aria-hidden="true"></i> Dashboard</h2>
    <br />
    <ul class="nav nav-tabs top-pad" role="tablist">
        <li role="presentation" class="active"><a href="#total-progress" role="tab" data-toggle="tab" id="total-progress-nav"><span class="fa fa-users"></span> Total Progress to Date</a></li>
        <li role="presentation"><a href="#participants-by-region" role="tab" data-toggle="tab" id="participants-by-region-nav"><span class="fa fa-globe"></span> Participants by Region</a></li>
    </ul>
    <div id="plotly-tabs" class="tab-content">
        <div id="total-progress" class="tab-pane pad active fade in">
            <div class="row">
                <div id="total-progress-filters" class="col-md-3">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <div class="panel-title">
                                <h4 class="text-primary">Plot Options</h4>
                            </div>
                        </div>
                        <div class="panel-body">
                            <div class="row form-group-sm">
                                <div class="col-md-12 col-xs-3 form-group form-group-sm">
                                    <label>Display Metric</label>
                                    <select id="total-progress-metric-attribute" class="form-control total-progress-control">
                                        {% for metric_key, display_val in metrics_attributes %}
                                            <option value="{{ metric_key }}">{{ display_val }}</option>
                                        {% endfor %}
                                    </select>
                                </div>
                                <div class="col-md-6 col-xs-3 form-group form-group-sm">
                                    <label>Start</label>
                                    <input type="text" class="form-control datepicker total-progress-control" id="total-progress-start-date" />
                                </div>
                                <div class="col-md-6 col-xs-3 form-group form-group-sm">
                                    <label>Cutoff</label>
                                    <input type="text" class="form-control datepicker total-progress-control" id="total-progress-end-date" />
                                </div>
                                <div class="col-md-12 col-xs-3 form-group form-group-sm">
                                    <label>Interval</label>
                                    <select id="total-progress-interval" class="form-control total-progress-control">
                                        <option value="DAY">Days</option>
                                        <option value="WEEK">Weeks</option>
                                        <option value="MONTH">Months</option>
                                    </select>
                                </div>
                                <div class="col-md-12 col-xs-12 form-group form-group-sm">
                                    <label>Show Column Totals <input type="checkbox" id="total-progress-show-annot" class="total-progress-control"></label>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div id="plotly-total-progress" class="col-md-9 plotly-div"></div>
            </div>
            <script type="text/javascript">
                // function to grab current filter values and load JSON from load_map_data REST endpoint
                // success handler calls Plotly.newplot()
                function renderTotalProgressPlot(showSpinner) {
                    if (showSpinner) {
                        launchSpinner('plotly-total-progress');
                    }
                    // gather params
                    var metricAttr = $('#total-progress-metric-attribute').val();
                    var tpInterval = $('#total-progress-interval').val();
                    var tpStartDate = $('#total-progress-start-date').val();
                    var tpEndDate = $('#total-progress-end-date').val();
                    var metricTitle = $('#total-progress-metric-attribute option:selected').text();
                    var showAnnot = $('#total-progress-show-annot').is(':checked');
                    var tpWidth = $('#plotly-total-progress').width() - 30;

                    // load data from metrics API
                    $.getJSON('/dashboard/metrics_load?csrf_token={{ csrf_token('dashboard') }}&metrics_attribute=' + metricAttr + '&interval=' + tpInterval + '&start_date=' + tpStartDate + '&end_date=' + tpEndDate, function(data) {
                        if (data.length != 0) {
                            var progressAnnot = [];
                            var tpLayout = {
                                title: 'Count of ' + metricTitle + ' from ' + tpStartDate + ' to ' + tpEndDate,
                                font: PLOTLY_LABEL_FONT,
                                barmode: 'stack',
                                width: tpWidth,
                                height: tpWidth / 1.66,
                                annotations: progressAnnot
                            };

                            // load column totals if requested
                            if (showAnnot) {
                                loadBarChartAnnotations(data, progressAnnot);
                            }

                            // render plot and stop spinner
                            Plotly.newPlot('plotly-total-progress', data, tpLayout, PLOTLY_OPTS);
                            if (showSpinner) {
                                stopSpinner('plotly-total-progress');
                            }
                        } else {
                            setMetricsError('plotly-total-progress');
                        }

                    });
                }

                var now = new Date();
                var nowString = now.toISOString().split('T')[0];
                var lastWeek = new Date().setDate(now.getDate() - 7);
                var lastWeekStr = new Date(lastWeek).toISOString().split('T')[0];
                $('#total-progress-end-date').val(nowString);
                $('#total-progress-start-date').val(lastWeekStr);
                renderTotalProgressPlot(true);

                // load plot on tab show (to save loading time)
                $('#total-progress-nav').on('shown.bs.tab', function (e) {
                    console.log('Showing total progress charts');
                    renderTotalProgressPlot(false);
                });

                // re-render on filter change
                $('.total-progress-control').change(function() {
                    renderTotalProgressPlot(true);
                });

                // re-render on window resizeEnd if tab is visible
                $( window ).on('resizeEnd', function() {
                    if ($('#total-progress').is(':visible')) {
                        renderTotalProgressPlot(false);
                    }
                });
            </script>
        </div>
        <div id="participants-by-region" class="tab-pane pad fade">
            <div class="row">
                <div class="col-md-3">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <div class="panel-title">
                                <h4 class="text-primary">Plot Options</h4>
                            </div>
                        </div>
                        <div class="panel-body">
                            <div class="row form-group-sm">
                                <div class="col-md-12 col-xs-4 form-group form-group-sm">
                                    <label>Participant Field</label>
                                    <select class="form-control region-plot-control" id="map-mode">
                                        <option value="Participant.state" selected>State</option>
                                        <option value="Participant.census_region" selected>Census Region</option>
                                    </select>
                                </div>
                                <div class="col-md-12 col-xs-4 form-group form-group-sm">
                                    <label>Cutoff</label>
                                    <input type="text" class="form-control datepicker region-plot-control" id="region-plot-end-date" />
                                </div>
                                <div class="col-md-12 col-xs-4 form-group form-group-sm">
                                    <label>Color Profile <span class="fa fa-question-circle-o" data-toggle="tooltip" title="Only applies to states and census regions maps"></span></label>
                                    <select class="form-control region-plot-control" id="map-color-profile">
                                        {% for color in color_profiles %}
                                            {% if color == 'Custom' %}
                                                <option value="{{ color }}" selected>{{ color }}</option>
                                            {% else %}
                                                <option value="{{ color }}">{{ color }}</option>
                                            {% endif %}
                                        {% endfor %}
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="plotly-participants-by-region" class="col-md-9 plotly-div"></div>

                <script type="text/javascript">
                    // function to grab current filter values and load JSON from load_map_data REST endpoint
                    // success handler calls Plotly.newplot()
                    function renderMapPlot() {
                        launchSpinner('plotly-participants-by-region');
                        // gather params
                        var mapWidth = $('#plotly-participants-by-region').width() - 30;
                        var mapCutoff = $('#region-plot-end-date').val();
                        var mapMode = $('#map-mode').val();
                        var mapModeText = $('#map-mode option:selected').text();
                        var mapColor = $('#map-color-profile').val();

                        // load data from metrics API
                        $.getJSON('/dashboard/metrics_load_region?csrf_token={{ csrf_token('dashboard') }}&map_mode=' + mapMode + '&end_date=' + mapCutoff + '&color_profile=' + mapColor, function(data) {
                            if (data.length != 0) {
                                var mapLayout = {
                                    title: 'Participant Registrations by ' + mapModeText + ' as of ' + mapCutoff,
                                    font: PLOTLY_LABEL_FONT,
                                    showlegend: false,
                                    width: mapWidth,
                                    height: mapWidth / 1.66,
                                    geo: GEO_OPTS
                                };


                                // render plot and stop spinner
                                Plotly.newPlot('plotly-participants-by-region', data, mapLayout, PLOTLY_OPTS);
                                stopSpinner('plotly-participants-by-region');
                            } else {
                                setMetricsError('plotly-participants-by-region');
                            }
                        });
                    }

                    var now = new Date().toISOString().split('T')[0];
                    $('#region-plot-end-date').val(now);

                    // load plot on tab show (to save loading time)
                    $('#participants-by-region-nav').on('shown.bs.tab', function (e) {
                        console.log('Showing region plots');
                        renderMapPlot();
                    });

                    // re-render on filter change
                    $('.region-plot-control').change(function() {
                        renderMapPlot();
                    });

                    // re-render on window resizeEnd if tab is visible
                    $( window ).on('resizeEnd', function() {
                        if ($('#plotly-participants-by-region').is(':visible')) {
                            renderMapPlot();
                        }
                    });
                </script>
            </div>
        </div>
    </div>

    <script type="text/javascript">
        $('.datepicker').datepicker({dateFormat: 'yy-mm-dd', showButtonPanel: true});

        $('[data-toggle="tooltip"]').tooltip({container: 'body'});

        $('.panel-collapse').on('show.bs.collapse hide.bs.collapse', function() {
            toggleGlyph($(this).prev().find('span.toggle-glyph'));
        });
    </script>
{% endblock %}
