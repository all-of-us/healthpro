{% extends 'dashboard/base.html.twig' %}
{% block title %}Dashboard{% endblock %}
{% block body %}
    {% include 'dashboard/partials/modal-loading-cached-metrics.html.twig' %}
    <br />
    {% include 'dashboard/partials/tabs.html.twig' with {active_tab: 'participants-by-region'} %}
    <div id="plotly-tabs" class="tab-content">
        <div id="participants-by-region" class="tab-pane pad active fade in">
            <div class="row">
                <div id="participants-by-region-filters" class="col-md-3">
                    {% include 'dashboard/partials/filters.html.twig' with {id: 'participants-by-region', show_organizations: false, show_recruitment_centers: true, recruitment_centers: recruitment_centers, show_enrollment_status: true} %}
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <div class="panel-title">
                                <h4 class="text-primary">Plot Options</h4>
                            </div>
                        </div>
                        <div class="panel-body">
                            <div class="row form-group-sm">
                                <div class="col-md-12 col-xs-4 form-group form-group-sm">
                                    <label for="map-mode">Display Metric</label>
                                    <select class="form-control region-plot-control" id="map-mode">
                                        <option value="GEO_STATE" selected>State</option>
                                        <option value="GEO_CENSUS">Census Region</option>
                                        <option value="GEO_AWARDEE">Recruitment Origin</option>
                                    </select>
                                </div>
                                <div class="col-md-12 col-xs-4 form-group form-group-sm">
                                    <label for="region-plot-end-date">Cutoff</label>
                                    <input type="text" class="form-control datepicker region-plot-time-control" id="region-plot-end-date" />
                                </div>
                                <div id="color-profile-select" class="col-md-12 col-xs-4 form-group form-group-sm">
                                    <label for="map-color-profile">Color Profile <span class="fa fa-question-circle-o" data-toggle="tooltip" title="Only applies to states and census regions maps"></span></label>
                                    <select class="form-control region-plot-control" id="map-color-profile">
                                        {% for color in color_profiles %}
                                            {% if color == 'Custom' %}
                                                <option value="{{ color }}" selected>{{ color }}</option>
                                            {% else %}
                                                <option value="{{ color }}">{{ color }}</option>
                                            {% endif %}
                                        {% endfor %}
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="plotly-participants-by-region" class="col-md-9 plotly-div"></div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <h4 class="text-center">Raw Data</h4>
                    <div class="table-responsive">
                        <div id="participants-by-region-table"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    {% include 'dashboard/partials/modal-dashboard-help.html.twig' %}
{% endblock %}

{% block pagejs %}
<script type="text/javascript">
    // Default to showing only 'Core' participants


    // function to grab current filter values and load JSON from load_map_data REST endpoint
    // success handler calls Plotly.newplot()
    function renderMapPlot(dialogType) {
        var regionCenters = loadRecruitmentFilters('participants-by-region');
        var enrollmentStatuses = loadEnrollmentFilters('participants-by-region');
        if (regionCenters.length == 0) {
            alert('You must select at least one recruitment center to plot results');
            return false;
        } else if (enrollmentStatuses.length == 0) {
            alert('You must select at least one enrollment status to plot results');
            return false;
        }

        var spinnerLoc = 'plotly-participants-by-region';
        if (dialogType == 'spinner') {
            launchSpinner(spinnerLoc);
        } else if (dialogType == 'modal' ) {
            spinnerLoc = 'modal-spinner-target';
            // empty target in case there was an error message beforehand
            $('#' + spinnerLoc).empty();
            launchSpinner(spinnerLoc);
            $('#loading-modal').modal('show');
        }
        // gather params
        var mapWidth = $('#plotly-participants-by-region').width() - 30;
        var mapCutoff = $('#region-plot-end-date').val();
        var mapMode = $('#map-mode').val();
        var mapModeText = $('#map-mode option:selected').text();
        var mapColor = $('#map-color-profile').val();
        if (regionCenters.length == $('#participants-by-region .center-filter').length) {
            regionCenters = ['ALL'];
        }

        if (mapMode == 'GEO_AWARDEE') {
            $('#map-color-profile').prop('disabled', true);
        } else {
            $('#map-color-profile').prop('disabled', false);
        }

        var enrollmentFilterText = 'Participants';
        if (enrollmentStatuses.length < 3) {
          var mappedEnrollmentStatuses = [];
          if (enrollmentStatuses.indexOf('INTERESTED') !== -1) {
            mappedEnrollmentStatuses.push('Registered');
          }
          if (enrollmentStatuses.indexOf('MEMBER') !== -1) {
            mappedEnrollmentStatuses.push('Fully Consented');
          }
          if (enrollmentStatuses.indexOf('FULL_PARTICIPANT') !== -1) {
            mappedEnrollmentStatuses.push('Core');
          }
          enrollmentFilterText = mappedEnrollmentStatuses.join(', ') + ' Participants';
        }

        // load data from metrics API
        $.getJSON('/dashboard/metrics_load_region', {
          csrf_token: CsrfToken,
          stratification: mapMode,
          end_date: mapCutoff,
          centers: regionCenters,
          enrollment_statuses: enrollmentStatuses,
          history: true,
          color_profile: mapColor 
        })
        .done(function(data) {
            if (data.length != 0) {
                if (mapModeText != 'Recruitment Origin') {
                    mapModeText += ' of residence'
                }
                var mapLayout = {
                    title: '<b>' + enrollmentFilterText + '</b> by <b>' + mapModeText.toLowerCase() + '</b> as of ' + mapCutoff,
                    font: PLOTLY_LABEL_FONT,
                    width: mapWidth,
                    height: mapWidth / 1.66,
                    geo: GEO_OPTS
                };

                // empty div contents in case there had been an error message before
                $('#' + spinnerLoc).empty();

                // load table data
                var regionTable = $('#participants-by-region-table');
                loadRegionTableData(regionTable, data, mapMode, mapModeText);

                // render plot and stop spinner
                Plotly.newPlot('plotly-participants-by-region', data, mapLayout, PLOTLY_OPTS);
                removePlotlyLink('plotly-participants-by-region');
                stopSpinner(spinnerLoc);

                if (dialogType == 'modal') {
                    $('#loading-modal').modal('hide');
                }

            } else {
                setMetricsError(spinnerLoc);
            }
        })
        .fail(function(jqXHR) {
          try {
            setMetricsError(spinnerLoc, JSON.parse(jqXHR.responseText).error);
          } catch (e) {
            setMetricsError(spinnerLoc, 'An error occurred while loading the data.');
          }
        });
    }

    var now = new Date().toISOString().split('T')[0];
    $('#region-plot-end-date').val(now);

    // Set default filter to show 'Core' participants only
    $('#participants-by-region .enrollment-status-filter').prop('checked', false)
    $('#participants-by-region .enrollment-status-filter[value="FULL_PARTICIPANT"]').prop('checked', true)

    // if plot has not been shown yet, render and then store state
    // this will prevent points render calls once map has been initialized
    if (!PLOTS_SHOWN['participants-by-region-nav']) {
        renderMapPlot('spinner');
        PLOTS_SHOWN['participants-by-region-nav'] = true;
    }

    // re-render on filter change
    $('.region-plot-control').on('change', function() {
        renderMapPlot('spinner');
    });

    // re-render on filter change with modal (for time changes, may need new metrics)
    $('.region-plot-time-control').on('change', function() {
        renderMapPlot('modal');
    });

    // re-render on window resizeEnd if tab is visible
    $( window ).on('resizeEnd', function() {
        if ($('#plotly-participants-by-region').is(':visible')) {
            renderMapPlot('');
        }
    });

    $('#participants-by-region').find('.redraw-plotly').on('click', function() {
        renderMapPlot('spinner');
    });
</script>
{% endblock %}
