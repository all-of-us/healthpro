{% extends 'dashboard/base.html.twig' %}
{% block title %}Dashboard{% endblock %}
{% block body %}
    {% include 'dashboard/partials/modal-loading-cached-metrics.html.twig' %}
    <br />
    {% include 'dashboard/partials/tabs.html.twig' with {active_tab: 'total-progress'} %}
    <div id="plotly-tabs" class="tab-content">
        <div id="total-progress" class="tab-pane pad active fade in">
            <div class="row">
                <div id="total-progress-filters" class="col-md-3">
                    {% include 'dashboard/partials/filters.html.twig' with {recruitment_centers: recruitment_centers, id: 'total-progress', show_enrollment_status: false} %}
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <div class="panel-title">
                                <h4 class="text-primary">Plot Options</h4>
                            </div>
                        </div>
                        <div class="panel-body">
                            <div class="row form-group-sm">
                                <div class="col-md-12 col-xs-3 form-group form-group-sm">
                                    <label for="total-progress-metric-attribute">
                                        Display Metric
                                        <i class="fa fa-question-circle text-info pull-right" style="cursor: pointer;" id="display-metrics-help"></i>
                                    </label>
                                    <select id="total-progress-metric-attribute" class="form-control total-progress-control">
                                        {% for metric_key, display_val in metrics_attributes %}
                                            <option value="{{ metric_key }}">{{ display_val }}</option>
                                        {% endfor %}
                                    </select>
                                </div>
                                <div class="col-md-6 col-xs-3 form-group form-group-sm">
                                    <label for="total-progress-start-date">Start</label>
                                    <input type="text" class="form-control datepicker total-progress-time-control" id="total-progress-start-date" />
                                </div>
                                <div class="col-md-6 col-xs-3 form-group form-group-sm">
                                    <label for="total-progress-end-date">Cutoff</label>
                                    <input type="text" class="form-control datepicker total-progress-time-control" id="total-progress-end-date" />
                                </div>
                                <div class="col-md-12 col-xs-3 form-group form-group-sm">
                                    <label for="total-progress-interval">Interval</label>
                                    <select id="total-progress-interval" class="form-control total-progress-control">
                                        <option value="DAY">Days</option>
                                        <option value="WEEK">Weeks</option>
                                        <option value="MONTH">Months</option>
                                    </select>
                                </div>
                                <div class="col-md-12 col-xs-12 form-group form-group-sm">
                                    <label>Show Column Totals <input type="checkbox" id="total-progress-show-annot" class="total-progress-control"></label>
                                </div>
                                <div class="col-md-12 col-xs-12 form-group form-group-sm">
                                    <label>Toggle Categories <i class="fa fa-question-circle" title="Click to toggle all categories, or toggle individual categories by clicking the legend entry" data-toggle="tooltip"></i> </label>
                                    <a href="javascript:void(0);" class="btn btn-default btn-sm" id="toggle-traces" >&nbsp;<i class='fa fa-toggle-on toggle-switch'></i></a>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div id="plotly-total-progress" class="col-md-9 plotly-div"></div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <h4 class="text-center">Raw Data</h4>
                    <div class="table-responsive">
                        <div id="total-progress-table"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    {% include 'dashboard/partials/modal-dashboard-help.html.twig' %}
{% endblock %}

{% block pagejs %}
<script type="text/javascript">
    // TODO: Move this code into dashboard.js

    // function to grab current filter values and load JSON from load_map_data REST endpoint
    // success handler calls Plotly.newplot()
    function renderTotalProgressPlot(dialogType) {
        // throw error if date selection is invalid
        var tpStartDate = $('#total-progress-start-date').val();
        var tpEndDate = $('#total-progress-end-date').val();

        // Restrict min/max dates based on selections
        $(document).ready(function() {
          $('#total-progress-end-date').data("DateTimePicker").minDate(tpStartDate);
          $('#total-progress-start-date').data("DateTimePicker").maxDate(tpEndDate);

          $('#total-progress-start-date').on("dp.change", function (e) {
            $('#total-progress-end-date').data("DateTimePicker").minDate(e.date);
          });
          $('#total-progress-end-date').on("dp.change", function (e) {
            $('#total-progress-start-date').data("DateTimePicker").maxDate(e.date);
          });
        });

        if ( new Date(tpStartDate) > new Date(tpEndDate)) {
            alert('Your date selection is invalid: The selected cutoff date of ' + tpEndDate + ' is before ' + tpStartDate + '. Please select a valid date range.');
            return false;
        }
        var centers = loadRecruitmentFilters('total-progress');
        if (centers.length == 0) {
            alert('You must select at least one recruitment center to plot results.');
            return false;
        } else {
            var spinnerLoc = 'plotly-total-progress';
            if (dialogType == 'spinner') {
                launchSpinner(spinnerLoc);
            } else if (dialogType == 'modal' ) {
                spinnerLoc = 'modal-spinner-target';
                // empty target in case there was an error message beforehand
                $('#' + spinnerLoc).empty();
                launchSpinner(spinnerLoc);
                $('#loading-modal').modal('show');
            }

            // gather params
            var metricAttr = $('#total-progress-metric-attribute').val();
            var tpInterval = $('#total-progress-interval').val();
            var metricTitle = $('#total-progress-metric-attribute option:selected').text();
            var showAnnot = $('#total-progress-show-annot').is(':checked');
            var tpWidth = $('#plotly-total-progress').width() - 30;
            if (centers.length == $('#total-progress .center-filter').length) {
                centers = [];
            }

            // Switch metricAttr
            var stratification;
            switch (metricAttr) {
              case 'Participant.enrollmentStatus':
                stratification = 'ENROLLMENT_STATUS';
                break;
              case 'Participant.genderIdentity':
                stratification = 'GENDER_IDENTITY';
                break;
              case 'Participant.ageRange':
                stratification = 'AGE_RANGE';
                break;
              case 'Participant.race':
                stratification = 'RACE';
                break;
              case 'Participant':
                stratification = 'TOTAL';
                break;
              default:
                setMetricsError(spinnerLoc, 'Not yet implemented.');
                return;
            }

            // load data from metrics API
            $.getJSON('/dashboard/metrics_load', {
              csrf_token: CsrfToken,
              stratification: stratification,
              interval: tpInterval,
              start_date: tpStartDate,
              end_date: tpEndDate,
              centers: centers,
              history: true
            })
            .done(function(data) {
                if (data.length != 0) {
                    var progressAnnot = [];
                    var tpLayout = {
                        title: 'Count of <b>' + metricTitle.toLowerCase() + '</b> by date',
                        font: PLOTLY_LABEL_FONT,
                        barmode: 'stack',
                        width: tpWidth,
                        height: tpWidth / 1.66,
                        hovermode: 'closest',
                        annotations: progressAnnot,
                        yaxis: {
                            fixedrange: true
                        },
                        xaxis : {
                            fixedrange: true
                        }
                    };

                    // load column totals if requested
                    if (showAnnot) {
                        loadBarChartAnnotations(data, progressAnnot);
                    }

                    // load table data
                    var tpTable = $('#total-progress-table');
                    loadTableData(tpTable, data, metricTitle);

                    // empty div contents in case there had been an error message before
                    $('#' + spinnerLoc).empty();

                    // render plot, remove plotly link and stop spinner
                    Plotly.newPlot('plotly-total-progress', data, tpLayout, PLOTLY_OPTS);
                    removePlotlyLink('plotly-total-progress');
                    stopSpinner(spinnerLoc);

                    if (dialogType == 'modal' ) {
                        $('#loading-modal').modal('hide');
                    }

                    // set toggle traces switch to on, regardless of previous state
                    $('#toggle-traces .toggle-switch').attr('class', 'fa fa-toggle-on toggle-switch');

                } else {
                    setMetricsError(spinnerLoc);
                }

            })
            .fail(function(jqXHR) {
              try {
                setMetricsError(spinnerLoc, JSON.parse(jqXHR.responseText).error);
              } catch (e) {
                setMetricsError(spinnerLoc, 'An error occurred while loading the data.');
              }
            });
        }
    }

    $('#toggle-traces').on('click', function() {
        togglePlotlyTraces('plotly-total-progress');
    });

    var now = new Date();
    var nowString = now.toISOString().split('T')[0];
    var lastWeek = new Date().setDate(now.getDate() - 6);
    var lastWeekStr = new Date(lastWeek).toISOString().split('T')[0];
    $('#total-progress-end-date').val(nowString);
    $('#total-progress-start-date').val(lastWeekStr);
    renderTotalProgressPlot('modal');
    PLOTS_SHOWN['total-progress-nav'] = true;

    // load plot on tab show (to save loading time)
    $('#total-progress-nav').on('shown.bs.tab', function (e) {
        // if plot has not been shown yet, render and then store state
        // this will prevent points render calls once map has been initialized
        if (!PLOTS_SHOWN['total-progress-nav']) {
            renderTotalProgressPlot('spinner');
            PLOTS_SHOWN['total-progress-nav'] = true;
        }
        // Send pageview event for tab
        ga('send', 'pageview', '/dashboard/total-progress');
    });

    // re-render on filter change
    $('.total-progress-control').on('change', function() {
        renderTotalProgressPlot('spinner');
    });

    // re-render on time filter change with modal (may need new metrics)
    $('.total-progress-time-control').on('change', function() {
        renderTotalProgressPlot('modal');
    });

    // re-render on window resizeEnd if tab is visible
    $( window ).on('resizeEnd', function() {
        if ($('#total-progress').is(':visible')) {
            renderTotalProgressPlot('');
        }
    });

    $('#total-progress').find('.redraw-plotly').on('click', function() {
        renderTotalProgressPlot('spinner');
    });
</script>
{% endblock %}
