{% extends 'dashboard/base.html.twig' %}
{% block title %}Dashboard{% endblock %}
{% block body %}
    {% include 'dashboard/partials/modal-loading-cached-metrics.html.twig' %}
    <br />
    {% include 'dashboard/partials/tabs.html.twig' with {active_tab: 'ehr'} %}
    <div id="plotly-tabs" class="tab-content">
        <div id="ehr" class="tab-pane pad active fade in">
            <div class="row">
                <div id="ehr-filters" class="col-md-3">
                    {% include 'dashboard/partials/filters.html.twig' with {id: 'ehr', show_organizations: true, show_recruitment_centers: false, show_enrollment_status: false} %}
                    <script>
                    $('#ehr-filters-content').removeClass('collapse')
                    </script>
                </div>
                <div class="col-md-9">
                  <div id="plotly-ehr-participants" class="plotly-div"></div>
                  <div class="col-md-12">
                    <div class="table-responsive">
                      <div id="table-ehr-participants" class="table-div"></div>
                    </div>
                  </div>
                  <div class="row">
                    <div class="col-md-12">
                      <hr />
                    </div>
                  </div>
                  <div class="row">
                      <div class="col-md-12">
                          <h4 class="text-center">Organization Data</h4>
                          <div class="table-responsive">
                            <div id="table-ehr-organizations" class="table-div"></div>
                          </div>
                      </div>
                  </div>
                </div>
            </div>
        </div>
    </div>
    {% include 'dashboard/partials/modal-dashboard-help.html.twig' %}
{% endblock %}

{% block pagejs %}
<script>
/**
 * Error Messages
 */
var ErrorMessages = {
    no_data: 'No data returned from the metrics endpoint.',
    general: 'Error encountered while retrieving the data'
}

/**
 * Show Error
 */
function showError(div, msg) {
  $(div).empty()
  $(div).append('<div class="alert alert-danger">' + msg + '</div>')
}

/**
 * Render Metrics EHR Plots
 */
function renderMetricsEhrPlots() {  
    // throw error if date selection is invalid
    var ehrOrganizations = loadOrganizationFilters('ehr');
    if (ehrOrganizations.length == 0) {
        alert('You must select at least one organization to plot results');
        return false;
    }

    // Add loading icons, clear previous errors
    $('.plotly-div').empty();
    $('.plotly-div').html('<div class="text-center"><i class="fa fa-spinner fa-spin fa-2x fa-fw"></i> Loading ...</span>');
    $('.table-div').empty();

    // gather params
    var ehrParticipantWidth = $('#plotly-ehr-participants').width() - 30;
    var ehrSitesWidth = $('#plotly-ehr-sites').width() - 30;

    /**
     * Participants Over Time
     */
    function updateParticipantsOverTime() {
        var plotlyDiv = $('#plotly-ehr-participants');
        var tableDiv = $('#table-ehr-participants');
        $.getJSON('/dashboard/metrics_load_ehr', {
                csrf_token: CsrfToken,
                mode: 'ParticipantsOverTime',
                organizations: ehrOrganizations
            })
            .done(function(data) {
                $(plotlyDiv).empty();
                $(tableDiv).empty();
                var plotlyTitle = '<b>EHR Consent</b> vs <b>EHR Data</b>';
                if (ehrOrganizations.length == $('.organization-filter').length) {
                  plotlyTitle += ' for <b>All Organizations</b>';
                } else {
                  plotlyTitle += ' for <b>Selected Organizations</b>';
                }
                if (data.length != 0) {
                    var progressAnnot = [];
                    var ehrParticipantLayout = {
                        title: plotlyTitle,
                        font: PLOTLY_LABEL_FONT,
                        width: ehrParticipantWidth,
                        height: ehrParticipantWidth / 1.66,
                        hovermode: 'closest',
                        annotations: progressAnnot,
                        yaxis: {
                            fixedrange: true
                        },
                        xaxis: {
                            fixedrange: true,
                            tickformat: '%Y-%m-%d'
                        }
                    };

                    // load table data
                    loadTableData(tableDiv, data, ehrParticipantLayout.title);

                    // render plot, remove plotly link
                    Plotly.newPlot('plotly-ehr-participants', data, ehrParticipantLayout, PLOTLY_OPTS);
                    removePlotlyLink('plotly-ehr-participants');

                    // set toggle traces switch to on, regardless of previous state
                    $('#toggle-traces .toggle-switch').attr('class', 'fa fa-toggle-on toggle-switch');
                } else {
                    showError(plotlyDiv, ErrorMessages.no_data)
                }

            })
            .fail(function(jqXHR) {
                try {
                    showError(plotlyDiv, JSON.parse(jqXHR.responseText).error);
                } catch (e) {
                    showError(plotlyDiv, ErrorMessages.general);
                }
            });
    }

    /**
     * Organizations Table
     */
    function updateOrganizations() {
        var tableDiv = $('#table-ehr-organizations')
        $.getJSON('/dashboard/metrics_load_ehr', {
                csrf_token: CsrfToken,
                mode: 'Organizations',
                organizations: ehrOrganizations
            })
            .done(function(data) {
                $(tableDiv).empty()
                if (data.length != 0) {
                    // load table data
                    $(tableDiv).html('<table id="table_ehr_data" class="table table-striped"><thead><tr></tr></thead><tbody></tbody></table>')
                    $('thead tr', tableDiv).append($('<th id="th_organization">Organization</th>'));
                    $('thead tr', tableDiv).append($('<th id="th_total_participants">Total Participants</th>'));
                    $('thead tr', tableDiv).append($('<th id="th_total_ehr_consent">Total EHR Consent</th>'));
                    $('thead tr', tableDiv).append($('<th id="th_total_core">Total Core</th>'));
                    $('thead tr', tableDiv).append($('<th id="th_total_ehr_data_received">Total EHR Data Received</th>'));
                    $('thead tr', tableDiv).append($('<th id="th_total_percent">Data / Consent</th>'));
                    $('thead tr', tableDiv).append($('<th id="th_last_ehr_submission_date">Last EHR Submission Date</th>'));
                    // Calculate totals to show at top
                    var columnTotals = {
                      total_primary_consented: 0,
                      total_ehr_consented: 0,
                      total_core_participants: 0,
                      total_ehr_data_received: 0
                    }
                    $(data).each(function(i, row) {
                      columnTotals.total_primary_consented += row.total_primary_consented
                      columnTotals.total_ehr_consented += row.total_ehr_consented
                      columnTotals.total_core_participants += row.total_core_participants
                      columnTotals.total_ehr_data_received += row.total_ehr_data_received
                    });
                    // Calculate EHR percentage
                    columnTotals.total_percent = ((columnTotals.total_ehr_data_received/columnTotals.total_ehr_consented)*100).toFixed(2)
                    // Render total row as part of thead
                    var totalRow = $('<tr class="info" />')
                    totalRow.append('<th>Total</th>')
                    totalRow.append('<th class="text-right">' +  columnTotals.total_primary_consented + '</th>')
                    totalRow.append('<th class="text-right">' +  columnTotals.total_ehr_consented + '</th>')
                    totalRow.append('<th class="text-right">' +  columnTotals.total_core_participants + '</th>')
                    totalRow.append('<th class="text-right">' +  columnTotals.total_ehr_data_received + '</th>')
                    totalRow.append('<th class="text-right">' +  (columnTotals.total_percent ? columnTotals.total_percent + '%' : '-') + '</td>')
                    totalRow.append('<th>&nbsp;</th>')
                    totalRow.css({fontWeight: 'bold'})
                    $('thead', tableDiv).append(totalRow)
                    // Render row level data
                    $(data).each(function(i, row) {
                        if (row.total_ehr_consented > 0 && row.total_ehr_data_received > 0) {
                            row.total_percent = ((row.total_ehr_data_received/row.total_ehr_consented)*100).toFixed(2)
                        } else {
                            row.total_percent = false;
                        }
                        var organizationRow = $('<tr />')
                        organizationRow.append('<td>' + row.organization_name + '</td>')
                        organizationRow.append('<td class="text-right">' + row.total_primary_consented + '</td>')
                        organizationRow.append('<td class="text-right">' + row.total_ehr_consented + '</td>')
                        organizationRow.append('<td class="text-right">' + row.total_core_participants + '</td>')
                        organizationRow.append('<td class="text-right">' + row.total_ehr_data_received + '</td>')
                        organizationRow.append('<td class="text-right">' + (row.total_percent ? row.total_percent + '%' : '-') + '</td>')
                        organizationRow.append('<td class="text-right">' + (row.last_ehr_submission_date ? row.last_ehr_submission_date : '-') + '</td>')
                        $('tbody', tableDiv).append(organizationRow)
                    });
                    // Add tooltips to rendered table columns
                    var infoIcon = $('<a tabindex="0" role="button" data-trigger="hover" data-toggle="popover"><i class="fa fa-question-circle"></i></a>').css({marginLeft: '0.5em', color: 'black'});
                    $('#th_total_participants').append(infoIcon.clone().attr('title', 'Total Participants').data('content', 'The count of individuals who have signed the AOURP primary consent and are paired with the organization listed').popover({container: 'body', html: 'true'}))
                    $('#th_total_ehr_consent').append(infoIcon.clone().attr('title', 'Total EHR Consent').data('content', 'The count of participants who have signed the EHR consent').popover({container: 'body', html: 'true'}))
                    $('#th_total_core').append(infoIcon.clone().attr('title', 'Core Participants').data('content', 'Total number of participants with a PID, signed primary consent, signed EHR Consent, completed the first three PPI Modules, submitted Physical Measurements and have a Biosample that has been received at the Biobank for sequencing').popover({container: 'body', html: 'true'}))
                    $('#th_total_ehr_data_received').append(infoIcon.clone().attr('title', 'EHR Data Received').data('content', 'Total number of paired participants with EHR data; <strong>Note:</strong> Not all organizations listed are involved in the EHR data upload process. If an organization is listed as having paired participants with EHR Data, but does not list any EHR Submission date in the next column, the data will have been uploaded by an associated organization').popover({container: 'body', html: 'true'}))
                    $('#th_total_percent').append(infoIcon.clone().attr('title', 'EHR Data Received/Total EHR Consent').data('content', 'Total number of paired participants with EHR data divided by the number with signed EHR consent, expressed as a percentage').popover({container: 'body', html: 'true'}))
                    $('#th_last_ehr_submission_date').append(infoIcon.clone().attr('title', 'Last EHR Submission Date').data('content', 'Most recent date of EHR data upload by organization, pulled from bucket logs; <strong>Note:</strong> Not all organizations listed are involved in the EHR data upload process').popover({container: 'body', html: 'true'}))

                    // Add DataTable controls
                    $('#table_ehr_data').DataTable({
                      sortCellsTop: true,
                      paging: false,
                      searching: false,
                      info: false
                    });
                } else {
                    showError(plotlyDiv, ErrorMessages.no_data);
                }

            })
            .fail(function(jqXHR) {
                try {
                    showError(plotlyDiv, JSON.parse(jqXHR.responseText).error);
                } catch (e) {
                    showError(plotlyDiv, ErrorMessages.general);
                }
            });
    }

    // Call them in sequence
    $.when(updateParticipantsOverTime(), updateOrganizations()).done(function() {
        $('#loading-modal').modal('hide');
    });

}

var now = new Date();
var nowString = now.toISOString().split('T')[0];
var programStartDate = new Date('May 1, 2018');
var programStartDateString = new Date(programStartDate).toISOString().split('T')[0];
$('#ehr-end-date').val(nowString);
$('#ehr-start-date').val(programStartDateString);

renderMetricsEhrPlots()

// re-render on filter change
$('.ehr-plot-control').on('change', function() {
    renderMetricsEhrPlots();
});

// re-render on filter change with modal (for time changes, may need new metrics)
$('.ehr-time-control').on('change', function() {
    renderMetricsEhrPlots();
});

// re-render on window resizeEnd if tab is visible
$(window).on('resizeEnd', function() {
    if ($('#plotly-ehr-participants').is(':visible')) {
        renderMetricsEhrPlots();
    }
});

$('#ehr').find('.redraw-plotly').on('click', function() {
    renderMetricsEhrPlots();
});
</script>
{% endblock %}
