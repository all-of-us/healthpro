{% extends 'dashboard/base.html.twig' %}
{% block body %}
    <div class="row">
        <div class="col-md-6"><h2><i class="fa fa-tachometer" aria-hidden="true"></i> Dashboard <small style="position: relative; bottom: 5px;"><span class="label label-danger">DEMO - NOT REAL DATA</span></small> </h2></div>
        <div class="col-md-6"><h2 class="text-right"><small>Participants as of {{ today }}: <span class="text-primary">{{ total_participants }} ({{ percentage }}%)</span></small></h2></div>
    </div>

    <br />
    <ul class="nav nav-tabs top-pad" role="tablist">
        <li role="presentation" class="active"><a href="#participants-by-time" role="tab" data-toggle="tab" id="participants-by-time-nav"><span class="fa fa-calendar"></span> Participant Categories Over Time</a></li>
        <li role="presentation"><a href="#participants-by-region" role="tab" data-toggle="tab" id="participants-by-region-nav"><span class="fa fa-globe"></span> Participants by Region</a></li>
        <li role="presentation"><a href="#participants-by-lifecycle" role="tab" data-toggle="tab" id="participants-by-lifecycle-nav"><span class="fa fa-sitemap"></span> Participants by Lifecycle Phase</a></li>
    </ul>
    <div id="plotly-tabs" class="tab-content">
        <div id="participants-by-time" class="tab-pane pad active fade in">
            <div class="row">
                <div class="col-md-3">
                    {% include 'dashboard/filters.html.twig' with {recruitment_centers: recruitment_centers, id: 'participants-by-time'} %}
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <div class="panel-title">
                                <h4 class="text-primary">Plot Options</h4>
                            </div>
                        </div>
                        <div class="panel-body">
                            <div class="row form-group-sm">
                                <div class="col-md-12 col-xs-3 form-group form-group-sm">
                                    <label>Participant Field</label>
                                    <select class="form-control time-plot-control" id="plot-value">
                                        <option value="participant_tiers" selected>Participant Tier</option>
                                        <option value="races">Race</option>
                                        <option value="ethnicities">Ethnicity</option>
                                        <option value="gender_identities">Gender Identity</option>
                                        <option value="age_groups">Age</option>
                                    </select>
                                </div>
                                <div class="col-md-6 col-xs-3 form-group form-group-sm">
                                    <label>Start</label>
                                    <input type="text" class="form-control datepicker time-plot-control" id="start-date" />
                                </div>
                                <div class="col-md-6 col-xs-3 form-group form-group-sm">
                                    <label>Cutoff</label>
                                    <input type="text" class="form-control datepicker time-plot-control" id="end-date" />
                                </div>
                                <div class="col-md-12 col-xs-3 form-group form-group-sm">
                                    <label>Interval</label>
                                    <select class="form-control time-plot-control" id="interval">
                                        <option value="months">Months</option>
                                        <option value="weeks">Weeks</option>
                                        <option value="days">Days</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-9 plotly-div" id="plotly-participants-by-time"></div>
            </div>

            <script type="text/javascript">
                // function to grab current filter values and load JSON from load_data REST endpoint
                // success handler calls Plotly.newplot()
                function renderPlot(showSpinner) {
                    if (showSpinner) {
                        launchSpinner('participants-by-time');
                    }
                    var width = $('#plotly-participants-by-time').width() - 30;
                    var startDate = $('#start-date').val();
                    var endDate = $('#end-date').val();
                    var attribute = $('#plot-value').val();
                    var displayText = $('#plot-value option:selected').text();
                    var interval = $('#interval').val();
                    var centers = loadRecruitmentFilters('participants-by-time');
                    $.getJSON('/dashboard/demo_load_data?start_date=' + startDate + '&end_date=' + endDate + '&attribute=' + attribute + '&interval=' + interval + "&centers=" + centers, function(data) {
                        var timeTitle;
                        if ($('#start-date').val() == '') {
                            timeTitle = 'Participant registrations by ' + displayText + ' as of ' + endDate;
                        } else {
                            timeTitle = 'Participant registrations by ' + displayText + ' from ' + startDate + ' to ' + endDate;
                        }

                        var timeAnnot = [];
                        var timeLayout = {
                            title: timeTitle,
                            width: width,
                            height: width / 1.66,
                            barmode: 'stack',
                            font: PLOTLY_LABEL_FONT,
                            annotations: timeAnnot
                        };

                        // only load totals when interval is not set to days
                        if (interval != 'days') {
                            loadBarChartAnnotations(data, timeAnnot, interval);
                        }

                        Plotly.newPlot('plotly-participants-by-time', data, timeLayout, PLOTLY_OPTS);
                        if (showSpinner) {
                            stopSpinner('participants-by-time');
                        }
                    });
                }

                // set default of today's date
                var today = new Date().toISOString().split('T')[0];
                $('#end-date').val(today);
                renderPlot(true);

                // load default plot on tab render (to save loading time)
                $('#participants-by-time-nav').on('shown.bs.tab', function (e) {
                    console.log('Showing time plot charts');
                    renderPlot(false);
                });

                // re-render on filter change
                $('.time-plot-control').change(function() {
                    renderPlot(true);
                });

                // re-render on window resizeEnd if tab is visible
                $( window ).on('resizeEnd', function() {
                    if ($('#participants-by-time').is(':visible')) {
                        renderPlot(false);
                    }
                });

                $('#participants-by-time').find('.redraw-plotly').click(function() {
                    renderPlot(true);
                });
            </script>
        </div>
        <div id="participants-by-region" class="tab-pane pad fade">
            <div class="row">
                <div class="col-md-3">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <div class="panel-title">
                                <h4 class="text-primary">Plot Options</h4>
                            </div>
                        </div>
                        <div class="panel-body">
                            <div class="row form-group-sm">
                                <div class="col-md-12 col-xs-3 form-group form-group-sm">
                                    <label>Participant Field</label>
                                    <select class="form-control region-plot-control" id="map-mode">
                                        <option value="states" selected>States</option>
                                        <option value="census_regions">Census Regions</option>
                                        <option value="recruitment_centers">Recruitment Origin</option>
                                    </select>
                                </div>
                                <div class="col-md-6 col-xs-3 form-group form-group-sm">
                                    <label>Start</label>
                                    <input type="text" class="form-control region-plot-control datepicker" id="region-date-start" />
                                </div>
                                <div class="col-md-6 col-xs-3 form-group form-group-sm">
                                    <label>Cutoff</label>
                                    <input type="text" class="form-control region-plot-control datepicker" id="region-date-end" />
                                </div>
                                <div class="col-md-12 col-xs-3 form-group form-group-sm">
                                    <label>Color Profile <span class="fa fa-question-circle-o" data-toggle="tooltip" title="Only applies to states and census regions maps"></span></label>
                                    <select class="form-control region-plot-control" id="map-color-profile">
                                        {% for color in color_profiles %}
                                            {% if color == 'Custom' %}
                                                <option value="{{ color }}" selected>{{ color }}</option>
                                            {% else %}
                                                <option value="{{ color }}">{{ color }}</option>
                                            {% endif %}
                                        {% endfor %}
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="plotly-participants-by-region" class="col-md-9 plotly-div"></div>
            </div>

            <script type="text/javascript">
                // function to grab current filter values and load JSON from load_map_data REST endpoint
                // success handler calls Plotly.newplot()
                function renderMap(showSpinner) {
                    if (showSpinner) {
                        launchSpinner('participants-by-region');
                    }
                    var mapWidth = $('#plotly-participants-by-region').width() - 30;
                    var mapStartDate = $('#region-date-start').val();
                    var mapEndDate = $('#region-date-end').val();
                    var mapMode = $('#map-mode').val();
                    var mapModeText = $('#map-mode option:selected').text();
                    var mapColor = $('#map-color-profile').val();
                    $.getJSON('/dashboard/demo_load_map_data?start_date=' + mapStartDate + '&end_date=' + mapEndDate + '&map_mode=' + mapMode + '&color_profile=' + mapColor, function(data) {
                        var mapTitle;
                        if ($('#region-date-start').val() == '') {
                            mapTitle = 'Participant registrations by ' + mapModeText + ' as of ' + mapEndDate;
                        } else {
                            mapTitle = 'Participant registrations by ' + mapModeText + ' from ' + mapStartDate + ' to ' + mapEndDate;
                        }
                        var mapLayout = {
                            title: mapTitle,
                            font: PLOTLY_LABEL_FONT,
                            showlegend: false,
                            width: mapWidth,
                            height: mapWidth / 1.66,
                            geo: GEO_OPTS
                        };
                        Plotly.newPlot('plotly-participants-by-region', data, mapLayout, PLOTLY_OPTS);
                        if (showSpinner) {
                            stopSpinner('participants-by-region');
                        }
                    });
                }

                // set default of today's date
                var today = new Date().toISOString().split('T')[0];
                $('#region-date-end').val(today);

                // load plot on tab show (to save loading time)
                $('#participants-by-region-nav').on('shown.bs.tab', function (e) {
                    console.log('Showing region plot charts');
                    renderMap(false);
                });

                // re-render on date change
                $('.region-plot-control').change(function() {
                    renderMap(true);
                });

                // re-render on window resizeEnd if tab is visible
                $( window ).on('resizeEnd', function() {
                    if ($('#participants-by-region').is(':visible')) {
                        renderMap(false);
                    }
                });
            </script>
        </div>
        <div id="participants-by-lifecycle" class="tab-pane pad fade">
            <div class="row">
                <div class="col-md-3">
                    {% include 'dashboard/filters.html.twig' with {recruitment_centers: recruitment_centers, id: 'participants-by-lifecycle'} %}
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <div class="panel-title">
                                <h4 class="text-primary">Plot Options</h4>
                            </div>
                        </div>
                        <div class="panel-body">
                            <div class="row form-group-sm">
                                <div class="col-md-6 col-xs-3 form-group form-group-sm">
                                    <label>Start</label>
                                    <input type="text" class="form-control lifecycle-plot-control datepicker" id="lifecycle-date-start" />
                                </div>
                                <div class="col-md-6 col-xs-3 form-group form-group-sm">
                                    <label>Cutoff</label>
                                    <input type="text" class="form-control lifecycle-plot-control datepicker" id="lifecycle-date-end" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-9 plotly-div" id="plotly-participants-by-lifecycle"></div>
            </div>

            <script type="text/javascript">
                // function to grab current filter values and load JSON from load_map_data REST endpoint
                // success handler calls Plotly.newplot()
                function renderLcPlot(showSpinner) {
                    if (showSpinner) {
                        launchSpinner('participants-by-lifecycle');
                    }
                    var lcWidth = $('#plotly-participants-by-lifecycle').width() - 30;
                    var lcStartDate = $('#lifecycle-date-start').val();
                    var lcEndDate = $('#lifecycle-date-end').val();
                    var lcCenters = loadRecruitmentFilters('participants-by-lifecycle');

                    $.getJSON('/dashboard/demo_load_lifecycle_data?start_date=' + lcStartDate + '&end_date=' + lcEndDate + '&centers=' + lcCenters, function(data) {
                        var lcTitle;
                        if ($('#lifecycle-date-start').val() == '') {
                            lcTitle = 'Participant registrations by lifecycle phase as of ' + lcEndDate;
                        } else {
                            lcTitle = 'Participant registrations by lifecycle phase from ' + lcStartDate + ' to ' + lcEndDate;
                        }
                        var lcAnnot = [];
                        var lcLayout = {
                            title: lcTitle,
                            font: PLOTLY_LABEL_FONT,
                            barmode: 'stack',
                            width: lcWidth,
                            height: lcWidth / 1.66,
                            annotations: loadBarChartAnnotations(data, lcAnnot, ''),
                            xaxis: {
                                tickangle: -45
                            },
                            margin: {
                                b: 150,
                                pad: 5
                            },
                        };
                        Plotly.newPlot('plotly-participants-by-lifecycle', data, lcLayout, PLOTLY_OPTS);
                        if (showSpinner) {
                            stopSpinner('participants-by-lifecycle');
                        }
                    });
                }

                // set default of today's date
                var today = new Date().toISOString().split('T')[0];
                $('#lifecycle-date-end').val(today);

                // load plot on tab show (to save loading time)
                $('#participants-by-lifecycle-nav').on('shown.bs.tab', function (e) {
                    console.log('Showing lifecycle plot charts');
                    renderLcPlot(false);
                });

                // re-render on date change
                $('.lifecycle-plot-control').change(function() {
                    renderLcPlot(true);
                });

                // re-render on window resizeEnd if tab is visible
                $( window ).on('resizeEnd', function() {
                    if ($('#participants-by-lifecycle').is(':visible')) {
                        renderLcPlot(false);
                    }
                });

                $('#participants-by-lifecycle').find('.redraw-plotly').click(function() {
                    renderLcPlot(true);
                });
            </script>
        </div>
    </div>

    <script type="text/javascript">
        $('.datepicker').datepicker({dateFormat: 'yy-mm-dd', showButtonPanel: true});

        $('[data-toggle="tooltip"]').tooltip({container: 'body'});

        $('.panel-collapse').on('show.bs.collapse hide.bs.collapse', function() {
            toggleGlyph($(this).prev().find('span.toggle-glyph'));
        });
    </script>
{% endblock %}
